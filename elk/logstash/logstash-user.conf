input {
    jdbc {
        ##### 1단계 방식 ###
        # jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        # jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        # jdbc_connection_string => "jdbc:mysql://my-database:3306/dangder"
        # jdbc_user => "root"
        # jdbc_password => "root"
        # schedule => "* * * * *" #분 시간 일 월 요일
        # statement => "select * from user" # 도커 안에서 동작할 쿼리문

        #### 2단계 #####
        # jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        # jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        # jdbc_connection_string => "jdbc:mysql://my-database:3306/dangder"
        # jdbc_user => "root"
        # jdbc_password => "root"
        # schedule => "* * * * *"
        # use_column_value => true
        # tracking_column => "updatedat"
        # tracking_column_type => "timestamp"
        # last_run_metadata_path => "./aaa.txt"
        # statement => "select * from user where updatedat > :sql_last_value order by updatedat asc"

        ##### 3단계 방식 #####
        jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://my-database:3306/dangder"
        jdbc_user => "root"
        jdbc_password => "root"
        schedule => "* * * * *"
        use_column_value => true
        tracking_column => "updatedat"
        tracking_column_type => "numeric"
        last_run_metadata_path => "./aaa.txt"
        statement => "select * from user where updatedAt > :sql_last_value order by updatedAt asc"
    }
}

filter {
  mutate {
    # id 값을 설정하여, 동일한 값이 다른 데이터로 들어가지 않게 방지 (수정 할 때도)
    copy => { "id" => "[@metadata][_id]"}
  }
}

output {
    elasticsearch {
        hosts => "elasticsearch:9200"
        index => "user"
        document_id => "%{[@metadata][_id]}"
        manage_template => true
        template => "/usr/share/logstash/template-user.json"
        template_name => "user"
        template_overwrite => true
    }
}
